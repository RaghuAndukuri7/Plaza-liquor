{"version":3,"file":"static/js/903.ee5b7d60.chunk.js","mappings":"wMAQA,MA6MA,EA7MoBA,KAClB,MAAM,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,IACEC,EAAAA,EAAAA,OAEGC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,MA2BnD,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAEjCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAC,0BAEnCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2BAA0BC,SAAC,mHAIxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CAACC,KAAMC,EAAAA,SAEzBH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oDAIPC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CAACC,KAAME,EAAAA,SAEzBJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0BAIPC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CAACC,KAAMG,EAAAA,SAEzBL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sCAOXC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAC,uBAEnCC,EAAAA,EAAAA,MAAA,QAAMM,SAAUnB,GA3EXoB,UACfd,GAAgB,GAChB,UACQe,EAAAA,GAAAA,KACJC,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,6BACZD,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYE,8BACZC,EACAH,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYI,8BAEdjB,EAAiB,CACfkB,KAAM,UACNC,KAAM,6DAERzB,GACF,CAAE,MAAO0B,GACPC,QAAQD,MAAM,0BAA2BA,GACzCpB,EAAiB,CACfkB,KAAM,QACNC,KAAM,mDAEV,CAAC,QACCtB,GAAgB,EAClB,KAqDkDK,UAAU,eAAcC,SAAA,EAC9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,OAAOpB,UAAU,aAAYC,SAAC,eAG7CF,EAAAA,EAAAA,KAAA,SACEsB,GAAG,OACHL,KAAK,UACD5B,EAAS,OAAQ,CACnBkC,SAAU,mBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,wCAGbzB,UAAW,eAAcT,EAAOmC,KAAO,mBAAqB,IAC5DC,YAAY,eAEbpC,EAAOmC,OACN3B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEV,EAAOmC,KAAKD,cAI9CvB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,QAAQpB,UAAU,aAAYC,SAAC,mBAG9CF,EAAAA,EAAAA,KAAA,SACEsB,GAAG,QACHL,KAAK,WACD5B,EAAS,QAAS,CACpBkC,SAAU,oBACVM,QAAS,CACPJ,MAAO,2CACPC,QAAS,2BAGbzB,UAAW,eAAcT,EAAOsC,MAAQ,mBAAqB,IAC7DF,YAAY,mBAEbpC,EAAOsC,QACN9B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEV,EAAOsC,MAAMJ,cAI/CvB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,UAAUpB,UAAU,aAAYC,SAAC,aAGhDF,EAAAA,EAAAA,KAAA,SACEsB,GAAG,UACHL,KAAK,UACD5B,EAAS,UAAW,CACtBkC,SAAU,sBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,2CAGbzB,UAAW,eAAcT,EAAOuC,QAAU,mBAAqB,IAC/DH,YAAY,qBAEbpC,EAAOuC,UACN/B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEV,EAAOuC,QAAQL,cAIjDvB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,UAAUpB,UAAU,aAAYC,SAAC,kBAGhDF,EAAAA,EAAAA,KAAA,YACEsB,GAAG,UACHU,KAAK,OACD3C,EAAS,UAAW,CACtBkC,SAAU,sBACVC,UAAW,CACTC,MAAO,GACPC,QAAS,4CAGbzB,UAAW,eAAcT,EAAOkC,QAAU,mBAAqB,IAC/DE,YAAY,kCAEbpC,EAAOkC,UACN1B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEV,EAAOkC,QAAQA,aAIhD5B,IACCE,EAAAA,EAAAA,KAAA,OAAKC,UAAW,kBAAkBH,EAAcmB,OAAOf,SACpDJ,EAAcoB,QAInBlB,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLgB,SAAUtC,EACVM,UAAU,gBAAeC,SAExBP,GACCQ,EAAAA,EAAAA,MAAA,QAAM+B,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWnC,SAAA,EAC/EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAAUiC,MAAO,CAAEI,MAAO,UAAWC,OAAQ,WAAaC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAWxC,SAAA,EACzIF,EAAAA,EAAAA,KAAA,UAAQkC,MAAO,CAAES,QAAS,KAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,eAAeC,YAAY,OAC3FhD,EAAAA,EAAAA,KAAA,QAAMkC,MAAO,CAAES,QAAS,KAAQF,KAAK,eAAeQ,EAAE,uHAClD,gBAGN,+BAOZ,ECtMV,EARgBC,KAEZlD,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACZ,EAAW,K","sources":["components/ContactForm.jsx","pages/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport emailjs from '@emailjs/browser';\r\n//import { motion } from 'framer-motion';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles/ContactForm.css';\r\n\r\nconst ContactForm = () => {\r\n  const { \r\n    register, \r\n    handleSubmit, \r\n    formState: { errors }, \r\n    reset \r\n  } = useForm();\r\n  \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitMessage, setSubmitMessage] = useState(null);\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      await emailjs.send(\r\n        process.env.REACT_APP_EMAILJS_SERVICE_ID,\r\n        process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\r\n        data,\r\n        process.env.REACT_APP_EMAILJS_PUBLIC_KEY\r\n      );\r\n      setSubmitMessage({ \r\n        type: 'success', \r\n        text: 'Message sent successfully! We will get back to you soon.' \r\n      });\r\n      reset();\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n      setSubmitMessage({ \r\n        type: 'error', \r\n        text: 'Failed to send message. Please try again later.' \r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-form-wrapper\">\r\n      <div className=\"contact-container\">\r\n        <div className=\"contact-card\">\r\n          <div className=\"contact-card-inner\">\r\n            {/* Contact Information */}\r\n            <div className=\"contact-info-section\">\r\n              <h2 className=\"contact-info-title\">Contact Plaza Liquor</h2>\r\n              \r\n              <p className=\"contact-info-description\">\r\n                Have questions about our products or services? Reach out to us and we'll get back to you as soon as possible.\r\n              </p>\r\n              \r\n              <div className=\"contact-details-container\">\r\n                <div className=\"contact-detail-item\">\r\n                  <div className=\"contact-icon\">\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n                  </div>\r\n                  <div className=\"contact-detail-content\">\r\n                    <h3>Our Location</h3>\r\n                    <p>123 Liquor Lane, Beverage City, BC 12345</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-detail-item\">\r\n                  <div className=\"contact-icon\">\r\n                    <FontAwesomeIcon icon={faPhone} />\r\n                  </div>\r\n                  <div className=\"contact-detail-content\">\r\n                    <h3>Call Us</h3>\r\n                    <p>(123) 456-7890</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-detail-item\">\r\n                  <div className=\"contact-icon\">\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                  </div>\r\n                  <div className=\"contact-detail-content\">\r\n                    <h3>Email Us</h3>\r\n                    <p>info@plazaliquor.com</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Contact Form */}\r\n            <div className=\"contact-form-section\">\r\n              <h2 className=\"contact-form-title\">Send Us a Message</h2>\r\n              \r\n              <form onSubmit={handleSubmit(onSubmit)} className=\"contact-form\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                    Your Name\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    {...register('name', { \r\n                      required: 'Name is required',\r\n                      minLength: {\r\n                        value: 2,\r\n                        message: 'Name must be at least 2 characters'\r\n                      }\r\n                    })}\r\n                    className={`form-input ${errors.name ? 'form-input-error' : ''}`}\r\n                    placeholder=\"John Smith\"\r\n                  />\r\n                  {errors.name && (\r\n                    <p className=\"error-message\">{errors.name.message}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                    Email Address\r\n                  </label>\r\n                  <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    {...register('email', { \r\n                      required: 'Email is required',\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: 'Invalid email address'\r\n                      }\r\n                    })}\r\n                    className={`form-input ${errors.email ? 'form-input-error' : ''}`}\r\n                    placeholder=\"your@email.com\"\r\n                  />\r\n                  {errors.email && (\r\n                    <p className=\"error-message\">{errors.email.message}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"subject\" className=\"form-label\">\r\n                    Subject\r\n                  </label>\r\n                  <input\r\n                    id=\"subject\"\r\n                    type=\"text\"\r\n                    {...register('subject', { \r\n                      required: 'Subject is required',\r\n                      minLength: {\r\n                        value: 5,\r\n                        message: 'Subject must be at least 5 characters'\r\n                      }\r\n                    })}\r\n                    className={`form-input ${errors.subject ? 'form-input-error' : ''}`}\r\n                    placeholder=\"How can we help?\"\r\n                  />\r\n                  {errors.subject && (\r\n                    <p className=\"error-message\">{errors.subject.message}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"message\" className=\"form-label\">\r\n                    Your Message\r\n                  </label>\r\n                  <textarea\r\n                    id=\"message\"\r\n                    rows=\"5\"\r\n                    {...register('message', { \r\n                      required: 'Message is required',\r\n                      minLength: {\r\n                        value: 10,\r\n                        message: 'Message must be at least 10 characters'\r\n                      }\r\n                    })}\r\n                    className={`form-input ${errors.message ? 'form-input-error' : ''}`}\r\n                    placeholder=\"Tell us about your inquiry...\"\r\n                  ></textarea>\r\n                  {errors.message && (\r\n                    <p className=\"error-message\">{errors.message.message}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                {submitMessage && (\r\n                  <div className={`submit-message ${submitMessage.type}`}>\r\n                    {submitMessage.text}\r\n                  </div>\r\n                )}\r\n                \r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"submit-button\"\r\n                >\r\n                  {isSubmitting ? (\r\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                      <svg className=\"spinner\" style={{ width: '1.25rem', height: '1.25rem' }} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle style={{ opacity: 0.25 }} cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                        <path style={{ opacity: 0.75 }} fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                      </svg>\r\n                      Sending...\r\n                    </span>\r\n                  ) : 'Send Message'}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport ContactForm from '../components/ContactForm';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <ContactForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"names":["ContactForm","register","handleSubmit","formState","errors","reset","useForm","isSubmitting","setIsSubmitting","useState","submitMessage","setSubmitMessage","_jsx","className","children","_jsxs","FontAwesomeIcon","icon","faMapMarkerAlt","faPhone","faEnvelope","onSubmit","async","emailjs","process","REACT_APP_EMAILJS_SERVICE_ID","REACT_APP_EMAILJS_TEMPLATE_ID","data","REACT_APP_EMAILJS_PUBLIC_KEY","type","text","error","console","htmlFor","id","required","minLength","value","message","name","placeholder","pattern","email","subject","rows","disabled","style","display","alignItems","justifyContent","width","height","xmlns","fill","viewBox","opacity","cx","cy","r","stroke","strokeWidth","d","Contact"],"sourceRoot":""}